<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- Parent -->
  <parent>
    <groupId>org.jboss.arquillian.extension</groupId>
    <artifactId>arquillian-persistence-parent</artifactId>
    <version>1.0.0.Final-SNAPSHOT</version>
  </parent>

  <!-- Model Version -->
  <modelVersion>4.0.0</modelVersion>

  <!-- Artifact Configuration -->
  <artifactId>arquillian-persistence-integration-tests</artifactId>
  <name>Arquillian Persistence Extension Integration Tests</name>
  <description>Demonstrates usage of Arquillian Persistence extension.</description>

  <properties>
    <version.cdi>1.0-SP1</version.cdi>
    <version.validation.api>1.0.0.GA</version.validation.api>
    <version.javaee-api.openejb>6.0-5</version.javaee-api.openejb>
    <version.poi>3.14</version.poi>
    <version.maven-dependency-plugin>2.3</version.maven-dependency-plugin>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-persistence-api</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-persistence-core</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <exclusions>
        <!--
          As TomEE comes with his own SPI we need to exclude it globally.
          It's imported on a profile basis.
        -->
        <exclusion>
          <artifactId>arquillian-transaction-jta</artifactId>
          <groupId>org.jboss.arquillian.extension</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-persistence-dbunit</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.openejb</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${version.javaee-api.openejb}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>${version.cdi}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.descriptors</groupId>
      <artifactId>shrinkwrap-descriptors-api-javaee</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.shrinkwrap.descriptors</groupId>
      <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>${version.poi}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- fails-safe-plugin should be used instead of surefire so that the container gets stopped even
          when the tests fail -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*Test.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Tell surefire to skip test, we are using the failsafe plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- This artifact shouldn't be deployed to maven repository -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

    </plugins>

  </build>

  <profiles>
    <profile>
      <id>glassfish-3.1-embedded-hsqldb</id>
      <dependencies>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>1.7.2</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
          <version>${version.arq.container.glassfish}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish.main.extras</groupId>
          <artifactId>glassfish-embedded-all</artifactId>
          <version>${version.glassfish}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
          <version>2.2.8</version>
          <type>jar</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-transaction-jta</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-glassfish-3.1-hsqldb</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-test-extension</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <id>glassfish-3.1-embedded-derby</id>
      <dependencies>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>1.7.2</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
          <version>${version.arq.container.glassfish}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish.main.extras</groupId>
          <artifactId>glassfish-embedded-all</artifactId>
          <version>${version.glassfish}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <artifactId>arquillian-transaction-jta</artifactId>
          <groupId>org.jboss.arquillian.extension</groupId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-glassfish-3.1-derby</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-test-extension</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <id>jbossas-7.0-managed</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>${version.jbossas_7}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>${version.jbossas_spec}</version>
          <type>pom</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xalan</groupId>
              <artifactId>xalan</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <artifactId>arquillian-transaction-jta</artifactId>
          <groupId>org.jboss.arquillian.extension</groupId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.jboss.as</groupId>
                      <artifactId>jboss-as-dist</artifactId>
                      <version>${version.jbossas_7}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-jboss-7.0.2</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-test-extension</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <id>wildfly-managed</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <version>${version.wildfly}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-transaction-jta</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>${version.jbossas_spec}</version>
          <type>pom</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xalan</groupId>
              <artifactId>xalan</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.wildfly</groupId>
                      <artifactId>wildfly-dist</artifactId>
                      <version>${version.wildfly}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- This test is using custom SQL which I don't want to
                  pollute with "SET INSERT_IDENTITY", because they should be portable. Hence
                  it's not essential for this profile to verify if this behaviour is correct
                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded
                  database. -->
                <exclude>**/DataCleanupStrategiesTest.java</exclude>
                <exclude>**/JpaCacheEvictionTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-wildfly-8.1.0</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <id>tomee-1.5-managed</id>
      <dependencies>
        <dependency>
          <groupId>org.apache.openejb</groupId>
          <artifactId>arquillian-tomee-remote</artifactId>
          <version>1.5.2</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.openejb</groupId>
          <artifactId>apache-tomee</artifactId>
          <version>1.5.2</version>
          <classifier>webprofile</classifier>
          <type>zip</type>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.openejb</groupId>
          <artifactId>javaee-api</artifactId>
          <version>6.0-4</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/JpaCacheEvictionTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-tomee-1.5</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-test-extension</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <!-- Dockerized profiles
        Make sure that
        * your docker host is running
        * you have DOCKER_HOST env variable defined
    -->
    <profile>
      <id>jbossas-7.1-managed-oracle11g</id>
      <properties>
        <additional.test.resources>resources-jboss-7.1.1-oracle11g</additional.test.resources>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-transaction-jta</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>7.1.1.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>${version.jbossas_spec}</version>
          <type>pom</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xalan</groupId>
              <artifactId>xalan</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- 1. Download this dependency from http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html
             2. install it in your local maven repository
                mvn install:install-file -Dfile=ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.2.0 -Dpackaging=jar -->
        <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc6</artifactId>
          <version>11.2.0.2.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${version.maven-dependency-plugin}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.jboss.as</groupId>
                      <artifactId>jboss-as-dist</artifactId>
                      <version>7.1.1.Final</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- This test is causing problems with @DataSourceDefinition.
                  For some reason it's not picked up before test.jar deployment, so persistence.xml
                  is referring to non existing datasource. -->
                <exclude>**/UserPersistenceEarDeploymentTest.java</exclude>
                <!-- This test is using custom SQL which I don't want to
                  pollute with "SET INSERT_IDENTITY", because they should be portable. Hence
                  it's not essential for this profile to verify if this behaviour is correct
                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded
                  database. -->
                <exclude>**/DataCleanupStrategiesTest.java</exclude>
                <!-- Due to the bug in JBoss 7.1.1.Final / Infinispan cache eviction
                throws NPE. This feature has been tested with 7.0.2.Final as for now. -->
                <exclude>**/JpaCacheEvictionTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${version.docker.plugin}</version>
            <configuration>
              <autoPull>true</autoPull>
              <images>
                <image>
                  <alias>db</alias>
                  <name>alexeiled/docker-oracle-xe-11g</name>
                  <run>
                    <privileged>true</privileged>
                    <ports>
                      <port>49160:22</port>
                      <port>49161:1521</port>
                      <port>49162:8080</port>
                    </ports>
                    <volumes>
                      <bind>
                        <volume>${project.basedir}/src/test/${additional.test.resources}/shell:/scripts</volume>
                      </bind>
                    </volumes>
                    <wait>
                      <url>http://localhost:49162/apex/</url>
                      <time>60000</time>
                      <exec>
                        <postStart>/bin/sh -c scripts/prepare-db.sh</postStart>
                      </exec>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <!-- Unlike other profiles we use scripts from the profile-specific resource folder
               so that they can use specific delimiters-->
          <testResource>
            <directory>src/test/${additional.test.resources}</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <id>jbossas-7.0-managed-mysql</id>
      <properties>
        <additional.test.resources>resources-jboss-7.0.2-mysql</additional.test.resources>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-transaction-jta</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>7.0.2.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>${version.jbossas_spec}</version>
          <type>pom</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xalan</groupId>
              <artifactId>xalan</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>${version.mysql.driver}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.jboss.as</groupId>
                      <artifactId>jboss-as-dist</artifactId>
                      <version>7.0.2.Final</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${version.build.helper.plugin}</version>
            <executions>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/java-jpa-cache-eviction</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- This test is causing problems with @DataSourceDefinition.
                  For some reason it's not picked up before test.jar deployment, so persistence.xml
                  is referring to non existing datasource. This only happens with mysql -->
                <exclude>**/UserPersistenceEarDeploymentTest.java</exclude>
                <!-- This test is using custom SQL which I don't want to
                  pollute with "SET INSERT_IDENTITY", because they should be portable. Hence
                  it's not essential for this profile to verify if this behaviour is correct
                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded
                  database. -->
                <exclude>**/DataCleanupStrategiesTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${version.docker.plugin}</version>
            <configuration>
              <autoPull>true</autoPull>
              <images>
                <image>
                  <name>mysql</name>
                  <run>
                    <privileged>true</privileged>
                    <ports>
                      <port>33306:3306</port>
                    </ports>
                    <env>
                      <MYSQL_ROOT_PASSWORD>letmein</MYSQL_ROOT_PASSWORD>
                    </env>
                    <volumes>
                      <bind>
                        <volume>${project.basedir}/src/test/${additional.test.resources}/shell:/scripts</volume>
                      </bind>
                    </volumes>
                    <wait>
                      <time>10000</time>
                      <exec>
                        <postStart>/bin/sh -c scripts/prepare-db.sh</postStart>
                      </exec>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/${additional.test.resources}</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <id>jbossas-7.1-managed-postgresql</id>
      <properties>
        <additional.test.resources>resources-jboss-7.1.1-postgresql</additional.test.resources>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-transaction-jta</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>7.1.1.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>${version.jbossas_spec}</version>
          <type>pom</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xalan</groupId>
              <artifactId>xalan</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>9.3-1102-jdbc41</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${version.maven-dependency-plugin}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.jboss.as</groupId>
                      <artifactId>jboss-as-dist</artifactId>
                      <version>7.1.1.Final</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- This test is causing problems with @DataSourceDefinition.
                  For some reason it's not picked up before test.jar deployment, so persistence.xml
                  is referring to non existing datasource. -->
                <exclude>**/UserPersistenceEarDeploymentTest.java</exclude>
                <!-- This test is using custom SQL which I don't want to
                  pollute with "SET INSERT_IDENTITY", because they should be portable. Hence
                  it's not essential for this profile to verify if this behaviour is correct
                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded
                  database. -->
                <exclude>**/DataCleanupStrategiesTest.java</exclude>
                <!-- Due to the bug in JBoss 7.1.1.Final / Infinispan cache eviction
                throws NPE. This feature has been tested with 7.0.2.Final as for now. -->
                <exclude>**/JpaCacheEvictionTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${version.docker.plugin}</version>
            <configuration>
              <autoPull>true</autoPull>
              <images>
                <image>
                  <name>postgres:9.3</name>
                  <alias>ape_postgres</alias>
                  <run>
                    <privileged>true</privileged>
                    <ports>
                      <port>65432:5432</port>
                    </ports>
                    <volumes>
                      <bind>
                        <volume>${project.basedir}/src/test/${additional.test.resources}/shell:/scripts</volume>
                      </bind>
                    </volumes>
                    <wait>
                      <time>5000</time>
                      <exec>
                        <postStart>/bin/sh -c scripts/prepare-db.sh</postStart>
                      </exec>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/${additional.test.resources}</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
    <profile>
      <!-- This profile requires VM to be up and running -->
      <id>jbossas-7.1-managed-mssql</id>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.extension</groupId>
          <artifactId>arquillian-transaction-jta</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-managed</artifactId>
          <version>7.1.1.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.spec</groupId>
          <artifactId>jboss-javaee-6.0</artifactId>
          <version>${version.jbossas_spec}</version>
          <type>pom</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xalan</groupId>
              <artifactId>xalan</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- 1. Download this dependency from http://msdn.microsoft.com/en-us/sqlserver/aa937724
          2. install it in your local maven repository mvn install:install-file -Dfile=sqljdbc4.jar
          -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0 -Dpackaging=jar -->
        <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>sqljdbc4</artifactId>
          <version>4.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${version.maven-dependency-plugin}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.jboss.as</groupId>
                      <artifactId>jboss-as-dist</artifactId>
                      <version>7.1.1.Final</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- This test is causing problems with @DataSourceDefinition.
                  For some reason it's not picked up before test.jar deployment, so persistence.xml
                  is referring to non existing datasource. -->
                <exclude>**/UserPersistenceEarDeploymentTest.java</exclude>
                <!-- This test is using custom SQL which I don't want to
                  pollute with "SET INSERT_IDENTITY", because they should be portable. Hence
                  it's not essential for this profile to verify if this behaviour is correct
                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded
                  database. -->
                <exclude>**/DataCleanupStrategiesTest.java</exclude>
                <!-- Due to the bug in JBoss 7.1.1.Final / Infinispan cache eviction
                throws NPE. This feature has been tested with 7.0.2.Final as for now. -->
                <exclude>**/JpaCacheEvictionTest.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
        <testResources>
          <testResource>
            <directory>src/test/resources-datasets</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-scripts</directory>
          </testResource>
          <testResource>
            <directory>src/test/resources-jboss-7.1.1-mssql</directory>
          </testResource>
        </testResources>
      </build>
    </profile>
     <profile>
          <id>wildfly-remote</id>
          <dependencies>
            <dependency>
              <groupId>org.jboss.arquillian.extension</groupId>
              <artifactId>arquillian-transaction-jta</artifactId>
              <scope>test</scope>
            </dependency>
              <dependency>
                  <groupId>org.wildfly</groupId>
                  <artifactId>wildfly-arquillian-container-remote</artifactId>
                  <scope>test</scope>
                  <version>8.2.0.Final</version>
              </dependency>
          </dependencies>
          <build>
              <plugins>
                  <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-surefire-plugin</artifactId>
                      <configuration>
                          <systemPropertyVariables>
                              <arquillian.launch>wildfly-remote</arquillian.launch>
                          </systemPropertyVariables>
                      </configuration>
                  </plugin>
              </plugins>
            <testResources>
              <testResource>
                <directory>src/test/resources-datasets</directory>
              </testResource>
              <testResource>
                <directory>src/test/resources-scripts</directory>
              </testResource>
              <testResource>
                <directory>src/test/resources-wildfly-8.1.0</directory>
              </testResource>
            </testResources>
          </build>
      </profile>
  </profiles>

</project>
